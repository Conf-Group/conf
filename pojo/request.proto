// Copyright (c) 2020, pole-group. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

syntax = "proto3";

import "google/protobuf/any.proto";
import "enpity.proto";
package pojo;

// request pojo for discovery

message InstanceRegister {
  Instance instance = 1;
  string namespaceId = 2;
}

message InstanceDeregister {
  Instance instance = 1;
  string namespaceId = 2;
}

message InstanceDisabled {
  string serviceName = 1;
  string group = 2;
  string ip = 3;
  int64 port = 4;
  bool enabled = 9;
  string namespaceId = 5;
}

message InstanceHeartBeat {
  Instance instance = 1;
  string namespaceId = 2;
}

message ServiceCreate {
  Service service = 1;
  string namespaceId = 2;
}

message ServiceUpdate {
  Service service = 1;
  string namespaceId = 2;
}

message ServiceDelete {
  Service service = 1;
  string namespaceId = 2;
}

message ClusterCreate {
  string namespaceId = 1;
  Cluster cluster = 2;
}

message ClusterUpdate {
  string namespaceId = 1;
  Cluster cluster = 2;
}

message ClusterDelete {
  string namespaceId = 1;
  Cluster cluster = 2;
}

message InstanceSelectorCreate {
  string namespaceId = 1;
  string serviceName = 2;
  string group = 3;
  string selectorContext = 4;
}

message InstanceSelectorUpdate {
  string namespaceId = 1;
  string serviceName = 2;
  string group = 3;
  string selectorContext = 4;
}

message QueryInstanceWithPage {
  string namespaceId = 1;
  string serviceName = 2;
  string group = 3;
  string clusterName = 4;
  int32 pageNo = 5;
  int32 pageSize = 6;
}

message SubscribeService {
  string namespaceId = 1;
  string serviceName = 2;
  string group = 3;
  string clusterName = 4;
}

message InstancesList {
  repeated Instance instances = 1;
}

message ConfigRequestMeta {
  string namespaceId = 1;
  string group = 2;
  // 如果开启了加密模式，则必须指定 solt 字段信息
  bool encrypt = 3;
  string solt = 4;
}

message ConfigBetaInfo {
  bool open = 1;
  repeated string clientIds = 2;
}

// request pojo for config
message ConfigRequest {
  ConfigRequestMeta meta = 1;
  string fileName = 2;
  string content = 3;
  FileType fileType = 4;
  ConfigBetaInfo betaInfo = 5;
}

message WatchItem {
  repeated string fileName = 2;
}

message ConfigWatchRequest {
  // 用于唯一标示一条配置监听的链接，server端根据这个信息进行监听数据的聚合
  string id = 1;
  string namespace = 2;
  map<string, WatchItem> watchItemMap = 3;
}
